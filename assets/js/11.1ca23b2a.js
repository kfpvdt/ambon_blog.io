(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{421:function(t,n,e){t.exports=e.p+"assets/img/4.ae85b2c8.png"},422:function(t,n,e){t.exports=e.p+"assets/img/5.5343f150.png"},423:function(t,n,e){t.exports=e.p+"assets/img/2.f337c91a.png"},424:function(t,n,e){t.exports=e.p+"assets/img/6.721c3d7d.png"},461:function(t,n,e){"use strict";e.r(n);var s=e(0),p=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("chatbot")])]),t._v(" "),n("p",[t._v("之前翻车了，51天天通宵终于弄好了。可以直接点击导航页CHATgpt访问")]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("上面的这个接口因为墙的问题加载不出来,其他的是没问题的。目前打算之后用 pengzhile 大佬的 https://ai.fakeopen.com/api/conversation，没能力自己翻过 CF 验证，已经用token搞定\n用API过不墙，只能用token，反向代理绕过。之前的预想是在网页做个组件，后来太麻烦了，找的开源。目前用的是3.5下个月会升级成4，主要是穷。\n"),n("img",{attrs:{src:e(421),alt:"页面截图"}})]),t._v(" "),n("p",[t._v("调试：\n步骤（已搞定的会标记）："),n("br"),t._v("\n先问问他自己怎么接入他：")]),t._v(" "),n("p",[n("img",{attrs:{src:e(422),alt:"页面截图"}})]),t._v(" "),n("p",[t._v("那具体思路有了")]),t._v(" "),n("h2",{attrs:{id:"_1-注册openai搞定api等-已完成"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-注册openai搞定api等-已完成"}},[t._v("#")]),t._v(" 1.注册OpenAI搞定API等（已完成）")]),t._v(" "),n("p",[t._v("1.在OpenAI网站上注册并获取API密钥。在OpenAI的开发者平台上注册，然后创建一个API密钥以供使用。（4月28已完成）"),n("br"),t._v("\n使用导入chatGPT包"),n("br"),t._v(" "),n("code",[t._v("js npm install chatgpt")]),t._v("js")]),t._v(" "),n("p",[n("img",{attrs:{src:e(423),alt:"页面截图"}}),n("br"),t._v(" "),n("code",[t._v("ps:手机号必须使用国外手机号才行，而国内的又容易封IP。")])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("2.在vuepress项目中添加手写一个gpt项目组件，源码：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<template>\n  <div>\n    <div v-for="message in messages" :key="message.id">\n      <p v-if="message.sender === \'user\'">{{ message.text }}</p>\n      <p v-else>{{ message.text }}</p>\n    </div>\n    <form @submit.prevent="sendMessage">\n      <input type="text" v-model="userInput" />\n      <button type="submit">Send</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport ChatGPT from \'chatgpt\';\n\nexport default {\n  data() {\n    return {\n      chatbot: null,\n      messages: [],\n      userInput: \'\',\n    };\n  },\n  async created() {\n    this.chatbot = new ChatGPT({\n      // 配置选项\n    });\n  },\n  methods: {\n    async sendMessage() {\n      if (!this.userInput) return;\n\n      this.messages.push({\n        id: Date.now(),\n        sender: \'user\',\n        text: this.userInput,\n      });\n\n      const response = await this.chatbot.getResponse(this.userInput);\n\n      this.messages.push({\n        id: Date.now(),\n        sender: \'chatbot\',\n        text: response,\n      });\n\n      this.userInput = \'\';\n    },\n  },\n};\n<script>\n')])])]),n("p",[t._v("安装OpenAI的Python SDK。可以使用pip安装OpenAI SDK，具体方法是在终端中运行以下命令：")]),t._v(" "),n("p",[t._v("pip install openai\n在Vuepress项目中安装必要的Python库。需要安装一些Python库，例如requests和json，以便在Vuepress项目中使用OpenAI SDK。可以使用以下命令在终端中安装这些库：")]),t._v(" "),n("p",[t._v("pip install requests\npip install json\n在Vuepress项目中编写Python脚本。需要编写一个Python脚本，该脚本将使用OpenAI API对Vuepress文本进行处理。您可以使用以下代码作为起点：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('\nimport openai\nimport json\nimport requests\n\nopenai.api_key = "YOUR_API_KEY"\n\ndef generate_text(prompt):\n    response = openai.Completion.create(\n        engine="davinci",\n        prompt=prompt,\n        max_tokens=1024,\n        n=1,\n        stop=None,\n        temperature=0.5,\n    )\n    text = response.choices[0].text\n    return text\n\nprompt = "YOUR_PROMPT_HERE"\ngenerated_text = generate_text(prompt)\n\n')])])]),n("p",[t._v("后发现可以发送，但返回是404,因为一些不可描述的原因，导致失败。后选择重构，特别感谢github，pengzhile大佬的开源潘多拉项目，熬了几天夜终于搞定。")]),t._v(" "),n("p",[t._v("https://github.com/pengzhile"),n("br"),t._v("\nChatGPT 是一个使用 Express 和 Vue3 搭建的演示网页，其主要功能是向 GPT 模型发送请求并获取响应。本文将介绍我是如何将 GPT 接入 ChatGPT 网页的，并解决中途遇到的一些问题。")]),t._v(" "),n("p",[t._v("一开始，我打算使用 Vue 组件来实现 ChatGPT 的功能，但是在尝试了一段时间后发现 GPT 模型的 API 在国内无法使用。于是我决定寻找解决方案，并找到了一位大佬在 GitHub 上提供的反向代理，该代理可以通过 token 接入 GPT 模型，从而在国内也能使用。")]),t._v(" "),n("p",[t._v("我按照该大佬提供的方法进行了尝试，但在连接服务器时遇到了一些问题。原来，我使用的是阿里云的服务器，而且安全组的规则设置也不太正确，导致无法正常连接服务器。经过一番排查和调整后，我终于成功连接了服务器，并且在 ChatGPT 网页中成功实现了 GPT 的接入。")]),t._v(" "),n("p",[t._v("为了能够将 ChatGPT 网页部署到服务器上，我需要将 Vue 项目打包成静态文件，并将其放置在服务器上的某个目录中。我将打包后的文件放置在了服务器的根目录下，然后通过 Express 的静态文件中间件来将其映射到网页上。")]),t._v(" "),n("p",[t._v("总的来说，将 GPT 接入 ChatGPT 网页并将其部署到服务器上的过程是一个比较繁琐的过程，需要对服务器的安全组规则、静态文件目录等进行相应的配置。但通过仔细的排查和调整，最终我还是成功实现了 ChatGPT 网页与 GPT 模型的接入，这也为后续的开发工作奠定了基础。\n"),n("img",{attrs:{src:e(424),alt:"页面截图"}})])])}),[],!1,null,null,null);n.default=p.exports}}]);