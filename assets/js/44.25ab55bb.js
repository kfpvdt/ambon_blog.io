(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{474:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("vue2")]),t._v(" "),e("p",[t._v("刚好明天要写一个单独的VUE组件，但小半年没做这种活了，写个日志也算复习下。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cn-vuejs-challenges.netlify.app/challenges.html#category=Built-ins",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js 挑战集合"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("Vue Router是vue官方提供的一个基础插件。\n路由分为前端路由和后端路由，")]),t._v(" "),e("h2",{attrs:{id:"后端路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#后端路由"}},[t._v("#")]),t._v(" 后端路由")]),t._v(" "),e("p",[t._v("通过web服务器实现页面跳转\neg:想在A页面打开B标签，则要先到web服务器请求到B页面，再返回。"),e("br"),t._v("\n而后端路由每次都需要和服务器进行交互。一个A标签是最基础的后端路由。")]),t._v(" "),e("h2",{attrs:{id:"前端vue路由-spa单页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端vue路由-spa单页面"}},[t._v("#")]),t._v(" 前端vue路由 spa单页面")]),t._v(" "),e("p",[t._v("前端页面并没有通过后端请求，而是用组件方式来替换掉。\n而是通过hash或者history API实现页面跳转\nhistory API则是通过html5中实现。")]),t._v(" "),e("h3",{attrs:{id:"jash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jash"}},[t._v("#")]),t._v(" jash")]),t._v(" "),e("p",[e("code",[t._v('<a href="#/presional">个人中心</a>')]),t._v("\n比如上面这个代码则是通过hash来请求")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta http-equiv="X-UA-Compatible" content="IE=edge">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <script src="../vue.js/vue.js"><\/script>\n    <title>Document</title>\n</head>\n<body>\n    <div id="app">\n        <a href="#presonal">个人中心</a>\n        <a href="#code">我的编码</a>\n        \x3c!-- 这种写法在后端无法获取，但在js中是可以获取。 --\x3e\n    </div>\n</body>\n</html>\n<script>\n    //监听事件\n    window.onhashchange = function(){\n        console.log(location.hash)\n        //当hash值改变时，打印hash值\n    }\n<\/script>\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);